#!/bin/bash

show_help() {
    echo "Usage:"
    echo "  $0 -u target.com           # Single domain"
    echo "  $0 -t targets.txt          # List of domains"
    echo
    exit 1
}

run_tools_for_domain() {
    local DOMAIN=$1
    local OUTPUT_DIR=$2

    echo "[*] Starting enumeration for: $DOMAIN"
    mkdir -p "$OUTPUT_DIR"

    echo "[*] Running subfinder..."
    subfinder -d "$DOMAIN" -all -recursive -t 200 -o "$OUTPUT_DIR/subfinder.txt"

    echo "[*] Running findomain..."
    findomain -t "$DOMAIN" | tee "$OUTPUT_DIR/findomain.txt"

    echo "[*] Running amass..."
    amass enum -passive -d "$DOMAIN" -o "$OUTPUT_DIR/amass.txt"

    echo "[*] Running assetfinder..."
    assetfinder --subs-only "$DOMAIN" | tee "$OUTPUT_DIR/assetfinder.txt"

    echo "[*] Combining and deduplicating results..."
    (
        cd "$OUTPUT_DIR" || exit
        cat subfinder.txt findomain.txt amass.txt assetfinder.txt 2>/dev/null \
            | sort -u | tee all.txt
        echo "[*] Cleaning up raw tool output files..."
        rm -f subfinder.txt findomain.txt amass.txt assetfinder.txt sublist3r.txt
    )

    echo "[+] Completed: $DOMAIN â†’ Output in $OUTPUT_DIR/all.txt"
    echo
}

# Main
if [ "$#" -lt 2 ]; then
    show_help
fi

while getopts ":u:t:" opt; do
    case $opt in
        u)
            DOMAIN=$(echo "${OPTARG}" | sed 's~http[s]*://~~; s~/.*~~')
            run_tools_for_domain "$DOMAIN" "$DOMAIN"
            ;;
        t)
            FILE=${OPTARG}
            if [ ! -f "$FILE" ]; then
                echo "[-] File not found: $FILE"
                exit 1
            fi
            while IFS= read -r line || [[ -n "$line" ]]; do
                DOMAIN=$(echo "$line" | sed 's~http[s]*://~~; s~/.*~~')
                [ -n "$DOMAIN" ] && run_tools_for_domain "$DOMAIN" "$DOMAIN"
            done < "$FILE"
            ;;
        \?)
            echo "[-] Invalid option: -$OPTARG"
            show_help
            ;;
        :)
            echo "[-] Option -$OPTARG requires an argument."
            show_help
            ;;
    esac
done
